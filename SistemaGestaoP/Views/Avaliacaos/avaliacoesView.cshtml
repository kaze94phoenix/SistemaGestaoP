@model SistemaGestaoP.Models.AvaliacaoViewModel

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

<p>
    @Html.ActionLink("Criar Avaliacao", "gerarAvaliacao")
</p>
@if (Model.AlunoProfessor.Count()!=0){
<div><a href="@Url.Action("DownloadViewPDF", "Avaliacaos", new { disciplinas = Model.AlunoProfessor.First().disciplinaProfessorFK, turmas = Model.AlunoProfessor.First().classeTurmaFK })">Download ViewAsPdf</a></div>
}
@using (Html.BeginForm("avaliacoesView", "Avaliacaos", FormMethod.Get))
{
    <div class="col-md-6 form-group">
   @*@Html.DropDownList("disciplinas", Model.disciplinas, htmlAttributes: new { @class="Disciplinas" })*@
        <select name="disciplinas" class="Disciplinas" style="width:400px">
            
        </select>
</div>

<div class="col-md-6 form-group">
    @*@Html.DropDownList("turmas", Model.turmas, htmlAttributes: new { @class="Turmas" })*@
    <select name="turmas" class="Turmas" style="width:400px"></select>
</div>

<div class="col-md-3 form-group">
    <button type="submit" class="btn btn-info">Filtrar</button>
</div>
}
<table class="table">
    <tr>
        <th>
            Aluno
        </th>
        @for(int i=1; i<=@Model.ACs; i++) { 
        <th>
            AC @i
        </th>
        }
        <th>
            MAC
        </th>
        @for (int i = 1; i <= @Model.ASs; i++)
        {
            <th>
                AS @i
            </th>
        }
        <th>
            MAS
        </th>
    </tr>
    @if (Model.AlunoProfessor!=null) {
    foreach (var aluno in Model.AlunoProfessor)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => aluno.Aluno.nome)
            </td>
            @foreach (var avaliacao in Model.Avaliacoes)
            {
                if (aluno.Alocacao_Aluno_Professor_id == avaliacao.alocacaoAlunoProfessorFK && avaliacao.tipoAvaliacaoFK == 1 && avaliacao.trimestreFK==1)
                {
                    <td class="edit" data-id="@avaliacao.Avaliacao_id" data-propertyname="nota">
                        @Html.DisplayFor(modelItem => avaliacao.nota)
                    </td>
                }

            }

            <td>
                @Model.MediaTrimestral.mediaAvaliacaoContinua(aluno.Alocacao_Aluno_Professor_id, 1)
            </td>

            @foreach (var avaliacao in Model.Avaliacoes)
            {
                if (aluno.Alocacao_Aluno_Professor_id == avaliacao.alocacaoAlunoProfessorFK && avaliacao.tipoAvaliacaoFK == 2 && avaliacao.trimestreFK == 1)
                {
                    <td class="edit" data-id="@avaliacao.Avaliacao_id" data-propertyname="nota">
                        @Html.DisplayFor(modelItem => avaliacao.nota)
                    </td>
                }

            }
            <td>
                @Model.MediaTrimestral.mediaAvaliacaoSistematica(aluno.Alocacao_Aluno_Professor_id, 1)
            </td>

            
            
        </tr>
    }
    }

</table>
@section Scripts {
    @*<script src="https://www.appelsiini.net/download/jquery.jeditable.mini.js"></script>*@
    @Scripts.Render("~/bundles/select2")
    @Scripts.Render("~/bundles/jeditable")
<script>

    $(document).ready(function () {
    //edicao de notas
        var oldValue = '';
        $('.edit').editable('/Avaliacaos/editarAvaliacoes/',{
            cssclass: 'jeditForm',
            tooltip: 'edite as notas',
            width: 'none',
            height: 'none',
            onsubmit: function (settings, original) {
                oldValue = original.revert;
            },
            submitdata: function () {
                return {
                    id: $(this).data('id'),
                    PropertyName: $(this).data('propertyname')
                }
            },
            callback: function (value, settings) {
                var jsonData = $.parseJSON(value);
                if (jsonData.status) {
                    $(this).text(jsonData.value);
                } else {
                    $(this).text(oldValue);
                }
            }
        })
        //fim da edicao de notas

        //Filtro em dropdownlist para as avaliacoes
        $(".Disciplinas").select2({
            placeholder: "Professor - Disciplina",
            ajax: {
                url: "/Disciplina_Professor/getDisciplinaProfessores",
                dataType: "json",
                data: function (params) {
                    return {
                        termo: params.term
                    };
                },
                processResults: function (data,params) {
                    return {
                        results: data
                    };
                }
            }
        })

        $(".Turmas").select2({
            placeholder: "Turma",
            ajax: {
                url: "/Classe_Turma/getClasseTurmas",
                dataType: "json",
                data: function (params) {
                   var disciplina = $(".Disciplinas").val();
                    return {
                        termo: params.term+","+disciplina
                    };
                },
                processResults: function (data, params) {
                    return {
                        results: data
                    };
                }
            }
        })
        //Fim do filtro

    }
    
    )

</script>
}





